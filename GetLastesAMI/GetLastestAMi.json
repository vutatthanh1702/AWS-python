console.log('Loading event');
 
exports.handler = function(event, context) {
    console.log("REQUEST RECEIVED:\n", JSON.stringify(event));
     
    if (event.RequestType == "Delete") {
        sendResponse(event, context, "SUCCESS");
        return;
    }
     
    var Owner = "amazon";
    var ExecutableUsers = "all";
    var architecture = "x86_64";
    var name = "amzn-ami-hvm-*";
    var root_device_type = "ebs";
    var virtualization_type = "hvm";
    var volumetype = "gp2";
    var responseStatus = "FAILED";
    var responseData = {};
   
    
    var aws = require("aws-sdk");
    var ec2 = new aws.EC2();
     
    var params = {
      DryRun: false,
      ExecutableUsers: [
        ExecutableUsers
      ],
      Filters: [
        {
          Name: "architecture",
          Values: [
            architecture
          ]
        },
        {
          Name: "root-device-type",
          Values: [
            root_device_type
          ]
        },
        {
          Name: "name",
          Values: [
            name
          ]
        },
        {
          Name: "virtualization-type",
          Values: [
            virtualization_type
          ]
        },
        {
          Name: "block-device-mapping.volume-type",
          Values: [
            volumetype
          ]
        }
      ],
      Owners: [
        Owner
      ]
    };  
    console.log("describeImage start");
    ec2.describeImages(params, function(err, data) {
      if (err) {
            responseData = {Error: "DescribeAMIs call failed"};
            console.log(responseData.Error + ":\n", err);
        }
        // Populates the return data with the outputs from the specified stack
        else {
            //sort AMIs
            responseStatus = "SUCCESS";
            data.Images.sort(function(a,b){
              if(b.Name.indexOf("rc-") >= 0){
                  return -1;
              }else{
                if(a.Name > b.Name){
                  return -1;
                } else {
                  return 1;
                }
              }
            });
             
            var latestName = data.Images[0].Name;
            var latestAMIId = data.Images[0].ImageId;
            console.log("name : " + latestName + " AMI ID : " + latestAMIId);
            responseData["LatestAmiId"] = latestAMIId;
        }
        sendResponse(event, context, responseStatus, responseData);
    });
};
 
//Sends response to the pre-signed S3 URL
function sendResponse(event, context, responseStatus, responseData) {
   var responseBody = JSON.stringify({
        Status: responseStatus,
        Reason: "See the details in CloudWatch Log Stream: " + context.logStreamName,
        PhysicalResourceId: context.logStreamName,
        StackId: event.StackId,
        RequestId: event.RequestId,
        LogicalResourceId: event.LogicalResourceId,
        Data: responseData
    });
     
    console.log("RESPONSE BODY:\n", responseBody);
 
    var https = require("https");
    var url = require("url");
 
    var parsedUrl = url.parse(event.ResponseURL);
    var options = {
        hostname: parsedUrl.hostname,
        port: 443,
        path: parsedUrl.path,
        method: "PUT",
        headers: {
            "content-type": "",
            "content-length": responseBody.length
        }
    };
 
    var request = https.request(options, function(response) {
        console.log("STATUS: " + response.statusCode);
        console.log("HEADERS: " + JSON.stringify(response.headers));
        // Tell AWS Lambda that the function execution is done  
        context.done();
    });
 
    request.on("error", function(error) {
        console.log("sendResponse Error:\n", error);
        // Tell AWS Lambda that the function execution is done  
        context.done();
    });
 
    // write data to request body
    request.write(responseBody);
    request.end();
}